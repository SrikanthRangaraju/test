import java.io.*;
import java.util.*;

public class FilterCSVBySubjectID {

    public static void main(String[] args) {
        // File paths
        String txtFilePath = "path/to/subject_ids.txt"; // Path to the TXT file with SUBJECTIDs
        String inputCsvPath = "path/to/input.csv"; // Path to the input CSV file
        String outputCsvPath = "path/to/output.csv"; // Path to the output CSV file

        // Load the SUBJECTIDs from the TXT file
        Set<String> subjectIds = loadSubjectIds(txtFilePath);

        if (subjectIds.isEmpty()) {
            System.out.println("No SUBJECTIDs found in the TXT file.");
            return;
        }

        // Filter and write rows to the output CSV
        filterCsvBySubjectIds(inputCsvPath, outputCsvPath, subjectIds);
    }

    private static Set<String> loadSubjectIds(String txtFilePath) {
        Set<String> subjectIds = new HashSet<>();
        try (BufferedReader br = new BufferedReader(new FileReader(txtFilePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                subjectIds.add(line.trim()); // Add SUBJECTID to the set
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return subjectIds;
    }

    private static void filterCsvBySubjectIds(String inputCsvPath, String outputCsvPath, Set<String> subjectIds) {
        try (BufferedReader br = new BufferedReader(new FileReader(inputCsvPath));
             BufferedWriter bw = new BufferedWriter(new FileWriter(outputCsvPath))) {

            // Read the header line
            String header = br.readLine();
            if (header == null) {
                System.out.println("Input CSV is empty!");
                return;
            }

            // Write the header to the output file
            bw.write(header);
            bw.newLine();

            // Find the index of the SUBJECTID column
            String[] headers = header.split(";", -1); // Split using semicolon delimiter
            int subjectIdIndex = -1;
            for (int i = 0; i < headers.length; i++) {
                if (headers[i].replace("\"", "").trim().equalsIgnoreCase("SUBJECTID")) {
                    subjectIdIndex = i;
                    break;
                }
            }

            if (subjectIdIndex == -1) {
                System.out.println("SUBJECTID column not found in the input CSV.");
                return;
            }

            // Filter rows based on SUBJECTID
            String row;
            while ((row = br.readLine()) != null) {
                String[] columns = row.split(";", -1); // Split using semicolon delimiter
                if (columns.length > subjectIdIndex) {
                    String subjectId = columns[subjectIdIndex].replace("\"", "").trim();
                    if (subjectIds.contains(subjectId)) {
                        bw.write(row);
                        bw.newLine();
                    }
                }
            }

            System.out.println("Filtered rows written to: " + outputCsvPath);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
