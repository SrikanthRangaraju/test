import java.io.*;
import java.util.*;

public class FilterCSVBySubjectID {
    public static void main(String[] args) {
        // Paths to input and output files
        String csvFilePath = "MasterFile.csv";
        String subjectIDsFilePath = "SubjectIDs.txt";
        String outputCsvFilePath = "FilteredMasterFile.csv";

        try {
            // Read SUBJECTIDs from the .txt file into a Set
            Set<String> subjectIDs = readSubjectIDsFromFile(subjectIDsFilePath);

            // Filter the CSV file based on SUBJECTIDs and write to a new file
            filterCSVBySubjectIDs(csvFilePath, subjectIDs, outputCsvFilePath);

            System.out.println("Filtered rows have been written to: " + outputCsvFilePath);
        } catch (IOException e) {
            System.err.println("Error: " + e.getMessage());
        }
    }

    private static Set<String> readSubjectIDsFromFile(String filePath) throws IOException {
        Set<String> subjectIDs = new HashSet<>();
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                subjectIDs.add(line.trim());
            }
        }
        return subjectIDs;
    }

    private static void filterCSVBySubjectIDs(String csvFilePath, Set<String> subjectIDs, String outputCsvFilePath) throws IOException {
        try (BufferedReader reader = new BufferedReader(new FileReader(csvFilePath));
             BufferedWriter writer = new BufferedWriter(new FileWriter(outputCsvFilePath))) {

            String header = reader.readLine(); // Read the header row
            if (header == null) {
                throw new IOException("CSV file is empty.");
            }

            writer.write(header); // Write the header to the output file
            writer.newLine();

            String[] headers = header.split(",");
            int subjectIDIndex = -1;

            // Find the index of the SUBJECTID column
            for (int i = 0; i < headers.length; i++) {
                if (headers[i].trim().equalsIgnoreCase("SUBJECTID")) {
                    subjectIDIndex = i;
                    break;
                }
            }

            if (subjectIDIndex == -1) {
                throw new IOException("SUBJECTID column not found in the CSV header.");
            }

            String line;
            while ((line = reader.readLine()) != null) {
                String[] row = line.split(",");
                if (row.length > subjectIDIndex && subjectIDs.contains(row[subjectIDIndex].trim())) {
                    writer.write(line); // Write matching row to the output file
                    writer.newLine();
                }
            }
        }
    }
}
