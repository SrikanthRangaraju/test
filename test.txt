private void recordOutputResults(String subjectId, CalcEngineResponse calcEngineResponse,
                                 FileWriter serviceOutputValuesFileWriter, long serviceInvocationLatencyInMillis,
                                 boolean writeHeaderLine) throws Exception {
    List<FeatureResponse> featureResponses = new ArrayList<>();
    
    // Check if there is at least one response
    if (!calcEngineResponse.getModelResponsesList().isEmpty()) {
        // Always capture the first response in a single object
        FeatureResponse subject = calcEngineResponse.getModelResponses(0).getFeatureResponsesList();
        featureResponses.addAll(subject); // Add to list

        // If more than one response exists, add all to a list
        if (calcEngineResponse.getModelResponsesList().size() > 1) {
            for (int i = 1; i < calcEngineResponse.getModelResponsesList().size(); i++) {
                featureResponses.addAll(calcEngineResponse.getModelResponses(i).getFeatureResponsesList());
            }
        }
    }

    // StringBuilder for writing output
    StringBuilder dataLineStringBuilder = new StringBuilder();
    dataLineStringBuilder.append(subjectId).append(",");
    dataLineStringBuilder.append(serviceInvocationLatencyInMillis).append(",");

    if (writeHeaderLine) {
        StringBuilder headerLineStringBuilder = new StringBuilder();
        headerLineStringBuilder.append("SubjectId,ServiceLatencyInMilliseconds,");
        for (FeatureResponse feature : featureResponses) {
            headerLineStringBuilder.append(feature.getFeatureName()).append(",");
        }
        serviceOutputValuesFileWriter.append(headerLineStringBuilder.append(System.lineSeparator()));
    }

    for (FeatureResponse feature : featureResponses) {
        dataLineStringBuilder.append(feature.getFeatureValue()).append(",");
    }

    serviceOutputValuesFileWriter.append(dataLineStringBuilder.append(System.lineSeparator()));
}
