private static String formatValue(String value) {
    if (value == null || value.trim().isEmpty() || value.equalsIgnoreCase("null")) {
        return "MISSING";  // Handle null/missing values
    }
    try {
        BigDecimal number = new BigDecimal(value.trim()).setScale(5, RoundingMode.HALF_UP);
        return number.stripTrailingZeros().toPlainString();
    } catch (NumberFormatException e) {
        return value.trim(); // Return as-is if not a number
    }
}


private static boolean areValuesEqual(String actual, String expected) {
    if (actual == null || expected == null) {
        return false; // If one of them is null, treat as different
    }
    try {
        BigDecimal actualNum = new BigDecimal(actual.trim()).setScale(5, RoundingMode.HALF_UP);
        BigDecimal expectedNum = new BigDecimal(expected.trim()).setScale(5, RoundingMode.HALF_UP);

        return actualNum.subtract(expectedNum).abs().compareTo(BigDecimal.valueOf(TOLERANCE)) <= 0;
    } catch (NumberFormatException e) {
        return actual.trim().equalsIgnoreCase(expected.trim()); // Fallback for non-numeric values
    }
}
