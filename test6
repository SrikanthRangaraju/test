import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVPrinter;
import org.apache.commons.csv.CSVRecord;

import java.io.*;
import java.util.*;

public class FilterCSVByHeadersCaseSensitive {
    public static void main(String[] args) {
        // File paths
        String inputCSVFile = "filewithdata1.csv";  // Input CSV file path
        String headersFile = "headers.txt";        // File containing headers to keep
        String outputCSVFile = "filewithdata2.csv"; // Output CSV file path

        try {
            // Read headers from the .txt file
            Set<String> headersToKeep = readHeadersFromTxt(headersFile);

            // Parse the input CSV file
            try (
                Reader reader = new FileReader(inputCSVFile);
                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withFirstRecordAsHeader());
                Writer writer = new FileWriter(outputCSVFile);
                CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT)
            ) {
                // Get original headers and filter them based on the headers to keep
                Map<String, Integer> originalHeaders = csvParser.getHeaderMap();
                List<String> filteredHeaders = new ArrayList<>();

                for (String header : originalHeaders.keySet()) {
                    if (headersToKeep.contains(header)) { // Case-sensitive comparison
                        filteredHeaders.add(header);
                    }
                }

                // Write the filtered headers to the output CSV
                csvPrinter.printRecord(filteredHeaders);

                // Write the data rows, filtering by the selected headers
                for (CSVRecord record : csvParser) {
                    for (String header : filteredHeaders) {
                        csvPrinter.print(record.get(header));
                    }
                    csvPrinter.println();
                }

                System.out.println("Filtered CSV saved to " + outputCSVFile);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Helper method to read headers from the .txt file (case-sensitive)
    private static Set<String> readHeadersFromTxt(String headersFile) throws IOException {
        Set<String> headersSet = new HashSet<>();
        try (BufferedReader br = new BufferedReader(new FileReader(headersFile))) {
            String line;
            while ((line = br.readLine()) != null) {
                headersSet.add(line.trim()); // Keep headers as-is for case-sensitive matching
            }
        }
        return headersSet;
    }
}

//
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-csv</artifactId>
    <version>1.10.0</version>
</dependency>
