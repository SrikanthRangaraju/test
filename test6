import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVPrinter;
import org.apache.commons.csv.CSVRecord;

import java.io.*;
import java.util.HashMap;
import java.util.Map;

public class ReplaceCSVHeadersWithDetailedLogging {
    public static void main(String[] args) {
        // Input and output file paths
        String inputFilePath = "input.csv";  // Path to your input CSV file
        String outputFilePath = "output.csv";  // Path to save the updated CSV file

        // Map of column replacements (key: old column name, value: new column name)
        Map<String, String> columnReplacements = new HashMap<>();
        columnReplacements.put("ABC1", "ABC9");
        columnReplacements.put("XYZ4", "ZXCV");
        columnReplacements.put("NOT_IN_CSV", "NEW_COLUMN");

        int headersChangedCount = 0; // Counter for changed headers

        try (
            Reader reader = new FileReader(inputFilePath);
            Writer writer = new FileWriter(outputFilePath);
            CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withFirstRecordAsHeader());
            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT)
        ) {
            // Get original header map
            Map<String, Integer> originalHeaders = csvParser.getHeaderMap();
            Map<String, Integer> newHeaders = new HashMap<>();

            // Create a lowercase map of the replacements for case-insensitive comparison
            Map<String, String> lowerCaseReplacements = new HashMap<>();
            for (Map.Entry<String, String> entry : columnReplacements.entrySet()) {
                lowerCaseReplacements.put(entry.getKey().toLowerCase(), entry.getValue());
            }

            // Log missing columns
            for (String key : columnReplacements.keySet()) {
                if (!originalHeaders.keySet().stream().anyMatch(header -> header.equalsIgnoreCase(key))) {
                    System.out.println("Warning: Column '" + key + "' not found in the input CSV file.");
                }
            }

            // Replace header names case-insensitively
            for (String header : originalHeaders.keySet()) {
                String lowerHeader = header.toLowerCase();
                if (lowerCaseReplacements.containsKey(lowerHeader)) {
                    String newHeader = lowerCaseReplacements.get(lowerHeader);
                    newHeaders.put(newHeader, originalHeaders.get(header));
                    System.out.println("Successfully changed header from \"" + header + "\" to \"" + newHeader + "\".");
                    headersChangedCount++; // Increment the count
                } else {
                    newHeaders.put(header, originalHeaders.get(header));
                }
            }

            // Write the new headers
            csvPrinter.printRecord(newHeaders.keySet());

            // Write the data rows
            for (CSVRecord record : csvParser) {
                for (String newHeader : newHeaders.keySet()) {
                    csvPrinter.print(record.get(originalHeaders.getOrDefault(newHeader, -1)));
                }
                csvPrinter.println();
            }

            System.out.println("Total number of headers changed: " + headersChangedCount);
            System.out.println("CSV column headers updated and saved to " + outputFilePath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
